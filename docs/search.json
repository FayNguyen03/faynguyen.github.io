[
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Landing My First Internship this Summer\n\n\n\n\nBA in Computer Science, Maths\nStatistics and Data Science concentration\n2026 | St. Olaf College\n\n\n\n\nUndergraduate Researcher | May 2023 - Present\nLead CS Teaching Assistant | Feb 2023 - Present\nTechnology Consulting Assistant | Sep 2022 - Present\n\n\n\n\n\nCourse Link\n[Portfolio] (https://faynguyen03.github.io/)\n\n\n\n\nEmail: nguyen94@stolaf.edu"
  },
  {
    "objectID": "index.html#goals",
    "href": "index.html#goals",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Landing My First Internship this Summer"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Fay Nguyen",
    "section": "",
    "text": "BA in Computer Science, Maths\nStatistics and Data Science concentration\n2026 | St. Olaf College"
  },
  {
    "objectID": "map.html",
    "href": "map.html",
    "title": "Mini Project 1: Maps",
    "section": "",
    "text": "us_data &lt;- map_data(\"state\")\nhome_health_care &lt;- read.csv(\"dataset/health.csv\")\n\nhome_health_care |&gt;\n  drop_na(Quality.of.Patient.Care.Star.Rating) |&gt;\n  mutate(State = str_to_lower(abbr2state(State))) |&gt;\n  filter(!is.na(State), !State %in% c(\"district of columbia\",\"alaska\",\"hawaii\")) |&gt;\n  right_join(us_data,\n    by = c(\"State\" = \"region\")) |&gt;\n  ggplot(mapping = aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = How.often.patients..wounds.improved.or.healed.after.an.operation),linewidth=0.3,color=\"white\") +\n  labs(fill = \"Percentage of wounds getting healed \\nafter operation\", title=\"How Often Patients' Wounds Healed After An Operation In 48 States\", subtitle=\"Data: Home Health Care - State by State Data\",caption = \"Source: Data.gov\") +\n  coord_map() +\n  theme(plot.title = element_text(size = 30)) +\n  theme_void() +\n  scale_fill_viridis()\n\n\n\n\nData Link\nThe data set records the state averages of several home health agency quality measures for Home Health Agencies. The variable of interest is\nHow.often.patients..wounds.improved.or.healed.after.an.operation.\nIn the plot, the more yellowish shade each state has, the higher the average percentage of wounds healed after operation. Therefore, South Dakota is the state with the lowest percentage of healed wounds (&lt;87%) while Rhode Island is the highest (&gt;93%). The states in the Northeastern and South East regions tend to have higher percentage of healing than the other regions of the country. This plot can provide valuable insights into the healthcare quality of each state. However, we need to carefully consider various factors beyond the raw averages to accurately assess and compare healthcare quality between states since each state has different population demographics as well as patients’ access to healthcare services and how frequently individuals utilize these services can impact healing rates. Therefore, while state averages for wound healing after operations provide an important snapshot of healthcare outcomes of each state, they should be interpreted within the broader context of demographic, socioeconomic, policy, and healthcare system factors."
  },
  {
    "objectID": "map.html#us-states",
    "href": "map.html#us-states",
    "title": "Mini Project 1: Maps",
    "section": "",
    "text": "us_data &lt;- map_data(\"state\")\nhome_health_care &lt;- read.csv(\"dataset/health.csv\")\n\nhome_health_care |&gt;\n  drop_na(Quality.of.Patient.Care.Star.Rating) |&gt;\n  mutate(State = str_to_lower(abbr2state(State))) |&gt;\n  filter(!is.na(State), !State %in% c(\"district of columbia\",\"alaska\",\"hawaii\")) |&gt;\n  right_join(us_data,\n    by = c(\"State\" = \"region\")) |&gt;\n  ggplot(mapping = aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = How.often.patients..wounds.improved.or.healed.after.an.operation),linewidth=0.3,color=\"white\") +\n  labs(fill = \"Percentage of wounds getting healed \\nafter operation\", title=\"How Often Patients' Wounds Healed After An Operation In 48 States\", subtitle=\"Data: Home Health Care - State by State Data\",caption = \"Source: Data.gov\") +\n  coord_map() +\n  theme(plot.title = element_text(size = 30)) +\n  theme_void() +\n  scale_fill_viridis()\n\n\n\n\nData Link\nThe data set records the state averages of several home health agency quality measures for Home Health Agencies. The variable of interest is\nHow.often.patients..wounds.improved.or.healed.after.an.operation.\nIn the plot, the more yellowish shade each state has, the higher the average percentage of wounds healed after operation. Therefore, South Dakota is the state with the lowest percentage of healed wounds (&lt;87%) while Rhode Island is the highest (&gt;93%). The states in the Northeastern and South East regions tend to have higher percentage of healing than the other regions of the country. This plot can provide valuable insights into the healthcare quality of each state. However, we need to carefully consider various factors beyond the raw averages to accurately assess and compare healthcare quality between states since each state has different population demographics as well as patients’ access to healthcare services and how frequently individuals utilize these services can impact healing rates. Therefore, while state averages for wound healing after operations provide an important snapshot of healthcare outcomes of each state, they should be interpreted within the broader context of demographic, socioeconomic, policy, and healthcare system factors."
  },
  {
    "objectID": "map.html#wisconsin-districts",
    "href": "map.html#wisconsin-districts",
    "title": "Mini Project 1: Maps",
    "section": "Wisconsin Districts",
    "text": "Wisconsin Districts\n\nwi &lt;- ggplot(data = wi_merged, aes(fill = winner)) +\n  annotation_map_tile(zoom = 6, type = \"osm\", progress = \"none\") + \n  geom_sf(alpha = 0.5) +\n  scale_fill_manual(\"Winner\", values = c(\"blue\", \"red\")) + \n  geom_sf_label(aes(label = DISTRICT), fill = \"white\") +\n  theme_void()\nwi + \n  labs(fill = \"Winner Party\", title=\"Wisconsin Controversial Congressional Districts and Gerrymandering\\nin 2016\", caption = \"Source: fes16\")\n\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n\n\n\n\nwi +\n  aes(fill = r_prop) + \n  scale_fill_distiller(\n    \"Proportion\\nRepublican\", \n    palette = \"RdBu\", \n    limits = c(0, 0.7)\n  )+ \n  labs(title=\"Proportion of Republican Votes in Wisconsin Congressional Districts\", subtitle =\"In 2016\", caption = \"Source: fes16\") \n\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n\n\n\n\n\nFor the choropleth map, the district 4 has color blue.\n\npal &lt;- colorNumeric(palette = \"RdYlBu\", domain = c(0, 1))\n\nleaflet_wi &lt;- leaflet(wi_merged) |&gt;\n  addTiles() |&gt;\n  addPolygons(\n    weight = 1, \n    fillOpacity = 0.7, \n    fillColor = ~ifelse(r_prop &gt; d_prop, \"red\", \"blue\"), \n    color = \"white\",\n    popup = ~paste(\"District \", DISTRICT, \"&lt;/br&gt;\", \"Probability of Republic Votes: \", round(r_prop, 4),\"&lt;/br&gt;\", \"Probability of Democratic Votes: \", round(d_prop, 4), \"&lt;/br&gt;Total votes: \", wi_results$total_votes)\n  ) |&gt;                         \n  setView(lng = -90, lat = 45, zoom = 7)\nleaflet_wi\n\n\n\n\n\nClicking on a district will show the probability of Republican and Democratic votes of that district.\nIn 2016, most of the districts in Wisconsin’s winner was Republic (6/8), except for District 2,3, and 4. In District 3 and District 4, there are no votes for Republican party. The ratio of probability of votes between the winner and the opponent party of most district is about 2:1. According to the plot, I assume that the winner party is Republican Party since it won more districts."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Link"
  },
  {
    "objectID": "projects.html#mini-project-1-maps",
    "href": "projects.html#mini-project-1-maps",
    "title": "Projects",
    "section": "",
    "text": "Link"
  },
  {
    "objectID": "index.html#contact-me",
    "href": "index.html#contact-me",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Email: nguyen94@stolaf.edu"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Undergraduate Researcher | May 2023 - Present\nLead CS Teaching Assistant | Feb 2023 - Present\nTechnology Consulting Assistant | Sep 2022 - Present"
  },
  {
    "objectID": "index.html#link",
    "href": "index.html#link",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Course Link\n[Portfolio] (https://faynguyen03.github.io/)"
  },
  {
    "objectID": "simulation.html",
    "href": "simulation.html",
    "title": "Mini Project 2: Simulation",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ggplot2)\nlibrary(tibble)\nlibrary(patchwork)"
  },
  {
    "objectID": "simulation.html#factor-1-variance",
    "href": "simulation.html#factor-1-variance",
    "title": "Mini Project 2: Simulation",
    "section": "Factor 1: Variance",
    "text": "Factor 1: Variance\nSince we have \\(\\sigma=\\sqrt{Variance}\\), I created 2 groups with the same mean and sample size but difference in standard deviation.\n\nsd_diff &lt;- sample(5:75,iter)\n\n\nsd1 &lt;- 35\n\n\ncombined_data &lt;- tibble(n_per_group = numeric(), power = numeric(), sd_diff_val = numeric())\n\nfor (val in sd_diff) {\n  result &lt;- power_stat_test(mean1, 0, sd1, val, type_1_error_level, numsims, iter)\n  temp_data &lt;- tibble(n_per_group = result[[1]], power = result[[2]], sd_diff_val = rep(val, length(result[[1]])))\n  combined_data &lt;- rbind(combined_data, temp_data)\n}\n\nggplot(combined_data, aes(x = n_per_group, y = power, color = as.factor(sd_diff_val))) +\n  geom_line() +\n  geom_hline(yintercept = 0.8, color = \"red\") +\n  labs(color = \"SD Difference\")+\n  theme_minimal()\n\n\n\nggplot(combined_data, aes(x = n_per_group, y = power, color = fct_reorder2(as.factor(sd_diff_val),n_per_group,power))) +\n  geom_line() +\n  labs(color = \"SD Difference\")+\n  scale_y_discrete(limits=max())+\n  theme_minimal()\n\nWarning in max(): no non-missing arguments to max; returning -Inf\n\n\nWarning: Continuous limits supplied to discrete scale.\nℹ Did you mean `limits = factor(...)` or `scale_*_continuous()`?"
  },
  {
    "objectID": "simulation.html#factor-2-size-of-the-true-difference",
    "href": "simulation.html#factor-2-size-of-the-true-difference",
    "title": "Mini Project 2: Simulation",
    "section": "Factor 2: Size of the true difference",
    "text": "Factor 2: Size of the true difference\nI created 2 groups with the same mean and sample size but difference in standard deviation.\n\nmean1 &lt;- 225\niter &lt;- 10\ntype_1_error_level &lt;- 0.05\ntrue_diff &lt;- sample(-100:100,iter)\nsd1 &lt;- 35\nnumsims &lt;- 1000\n\nLet mean1 = 225.\n\ncombined_data_mean &lt;- tibble(n_per_group = numeric(), power = numeric(), true_diff_val = numeric())\n\nfor (val in true_diff) {\n  result &lt;- power_stat_test(mean1, val, sd1, 0,type_1_error_level, numsims, iter)\n  temp_data &lt;- tibble(n_per_group = result[[1]], power = result[[2]], true_diff_val = rep(val, length(result[[1]])))\n  combined_data_mean &lt;- rbind(combined_data_mean, temp_data)\n}\n\n\nggplot(combined_data_mean, aes(x = n_per_group, y = power, color = fct_reorder2(as.factor(true_diff_val),n_per_group,power))) +\n  geom_line(linewidth=0.8) +\n  geom_hline(yintercept = 0.8, color = \"red\", linewidth=1) +\n  labs(color = \"Mean Difference\")+\n  theme_minimal()\n\n\n\n\n\\(|\\Delta_{mean}|\\)"
  },
  {
    "objectID": "simulation.html#factor-3-type-1-error-level",
    "href": "simulation.html#factor-3-type-1-error-level",
    "title": "Mini Project 2: Simulation",
    "section": "Factor 3: Type 1 Error Level",
    "text": "Factor 3: Type 1 Error Level\n\nmean1 &lt;- 225\niter &lt;- 10\nsd1 &lt;- 35\ntype_1_error_level &lt;- sample(seq(0.01, 0.9, by = 0.01), iter, replace = TRUE)\n\n\ncombined_data_error &lt;- tibble(n_per_group = numeric(), power = numeric(), error_level = numeric())\ntype_1_error_level\n\n [1] 0.69 0.67 0.85 0.45 0.80 0.30 0.61 0.63 0.29 0.47\n\nfor (val in type_1_error_level) {\n  print(val)\n  result &lt;- power_stat_test(mean1, 0, sd1, 0, val, numsims, iter)\n  temp_data &lt;- tibble(n_per_group = result[[1]], power = result[[2]], error_level = rep(val, length(result[[1]])))\n  combined_data_error &lt;- rbind(combined_data_error, temp_data)\n}\n\n[1] 0.69\n[1] 0.67\n[1] 0.85\n[1] 0.45\n[1] 0.8\n[1] 0.3\n[1] 0.61\n[1] 0.63\n[1] 0.29\n[1] 0.47\n\ncombined_data_error\n\n# A tibble: 100 × 3\n   n_per_group power error_level\n         &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1           5 0.681        0.69\n 2          10 0.69         0.69\n 3          15 0.716        0.69\n 4          20 0.699        0.69\n 5          25 0.7          0.69\n 6          30 0.695        0.69\n 7          35 0.684        0.69\n 8          40 0.683        0.69\n 9          45 0.678        0.69\n10          50 0.713        0.69\n# ℹ 90 more rows\n\n\n\nggplot(combined_data_error, aes(x = n_per_group, y = power, color = fct_reorder2(as.factor(error_level),n_per_group,power))) +\n  geom_line(linewidth=0.8) +\n  geom_hline(yintercept = 0.8, color = \"red\", linewidth=1) +\n  labs(color = \"Type I Error\")+\n  theme_minimal()"
  },
  {
    "objectID": "simulation.html#factor-4-sample-size",
    "href": "simulation.html#factor-4-sample-size",
    "title": "Mini Project 2: Simulation",
    "section": "Factor 4: Sample size",
    "text": "Factor 4: Sample size\n\npower_stat_test &lt;- function(mean1, mean_diff, sd1, type_1_error_level, numsims, sample_sizes){\n  power_vals &lt;- numeric(length(sample_sizes))\n  sample_size &lt;- numeric(length(sample_sizes))\n  \n  mean2 &lt;- mean1 + mean_diff\n  \n  for (k in seq_along(sample_sizes))  {\n    significant &lt;- numeric(numsims)\n    n1 &lt;- sample_sizes[k]\n    n2 &lt;- n1\n    for (i in 1:numsims) {\n      samp1 &lt;- rnorm(n1, mean1, sd1)\n      samp2 &lt;- rnorm(n2, mean2, sd1) # Notice sd2 is removed or kept constant as sd1\n      p_value &lt;- t.test(x = samp1, y = samp2)$p.value\n      significant[i] &lt;- (p_value &lt; type_1_error_level)\n    }\n    power_vals[k] &lt;- mean(significant)\n    sample_size[k] &lt;- n1\n  }\n  return(list(sample_size = sample_size, power = power_vals))\n}\n\n\nnumsims &lt;- 1000\nmean1 &lt;- 225\nsd1 &lt;- 35\nmean_diff &lt;- 10 # Assuming you're interested in a specific mean difference\ntype_1_error_level &lt;- 0.05\nsample_sizes &lt;- seq(10, 1000, by = 50) # Example range of sample sizes\n\nresult &lt;- power_stat_test(mean1, mean_diff, sd1, type_1_error_level, numsims, sample_sizes)\n\n# Plotting the results\nlibrary(ggplot2)\nggplot(data = data.frame(sample_size = result$sample_size, power = result$power), aes(x = sample_size, y = power)) +\n  geom_line() +\n  geom_point() +\n  geom_hline(yintercept = 0.8, linetype = \"dashed\", color = \"red\") +\n  theme_minimal() +\n  labs(title = \"Power of Statistical Test vs. Sample Size\",\n       x = \"Sample Size\",\n       y = \"Power\")"
  },
  {
    "objectID": "simulation.html#the-effects-of-two-factors-on-the-power-of-a-statistical-test",
    "href": "simulation.html#the-effects-of-two-factors-on-the-power-of-a-statistical-test",
    "title": "Mini Project 2: Simulation",
    "section": "The Effects of Two Factors On The Power of A Statistical Test",
    "text": "The Effects of Two Factors On The Power of A Statistical Test\nThere are some factors that affect the power of a statistical test:\n\nsample size\ntype I error level\nvariability in the data\nsize of the true difference\n\nwhy intercept at 0.8: To evaluate the effects for two factors, I created a generalized function to compute the power of each statistical test:\n\npower_stat_test &lt;- function(mean1, mean_diff, sd1, sd_diff, type_1_error_level, numsims,iter){\n  #list of power values after all iterations \n  power_vals &lt;- vector(\"double\",iter)\n  #list of sample size value\n  sample_size &lt;- vector(\"numeric\",iter)\n  #calculate the mean of the second group\n  mean2 &lt;- mean1 + mean_diff\n  #calculate the standard deviation of the second group\n  sd2 &lt;- sd1 + sd_diff\n  for (k in 1:iter)  {\n    significant &lt;- vector(\"logical\", numsims)\n    n1 &lt;- 5 * k\n    n2 &lt;- n1\n    for (i in 1:numsims) {\n      samp1 &lt;- rnorm(n1, mean1, sd1)\n      samp2 &lt;- rnorm(n2, mean2, sd2)\n      p_value &lt;- t.test(x = samp1, y = samp2)$p.value\n      significant[i] &lt;- (p_value &lt; type_1_error_level)\n    }\n    power_vals[k] &lt;- mean(significant)\n    sample_size[k] &lt;- n1\n  }\n  return(list(sample_size,power_vals))\n}\n\nThis function takes the parameters:\n\n\n\n\n\n\n\nParameter\nPurpose\n\n\n\n\nmean1\nThe mean value of the first group\n\n\nmean_diff\nThe true difference in mean value of two groups\n\n\nsd1\nThe standard deviation of the first group\n\n\nsd_diff\nThe difference in standard deviation of two groups\n\n\ntype_1_error_level\nType I error level or the risk of making a Type I error\n\n\nnumsims\nNumber of statistics tests on the same simulated data set (=1000)\n\n\niter\nThis value used for the purpose of testing the simulated data set with a factor changing over the time and other factors remain the same\n\n\n\nI set this value large to…\n\nmean1 &lt;- 225\niter &lt;- 10\ntype_1_error_level &lt;- 0.05\nnumsims &lt;- 1000\nsd1 &lt;- 35"
  }
]
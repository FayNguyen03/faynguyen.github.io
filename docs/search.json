[
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Landing My First Internship this Summer\n\n\n\n\nBA in Computer Science, Maths\nStatistics and Data Science concentration\n2026 | St. Olaf College\n\n\n\n\nUndergraduate Researcher | May 2023 - Present\nLead CS Teaching Assistant | Feb 2023 - Present\nTechnology Consulting Assistant | Sep 2022 - Present\n\n\n\n\n\nCourse Link\nPortfolio\n\n\n\n\nEmail: nguyen94@stolaf.edu"
  },
  {
    "objectID": "index.html#goals",
    "href": "index.html#goals",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Landing My First Internship this Summer"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Fay Nguyen",
    "section": "",
    "text": "BA in Computer Science, Maths\nStatistics and Data Science concentration\n2026 | St. Olaf College"
  },
  {
    "objectID": "map.html",
    "href": "map.html",
    "title": "Mini Project 1: Maps",
    "section": "",
    "text": "us_data &lt;- map_data(\"state\")\nhome_health_care &lt;- read.csv(\"dataset/health.csv\")\n\nhome_health_care |&gt;\n  drop_na(Quality.of.Patient.Care.Star.Rating) |&gt;\n  mutate(State = str_to_lower(abbr2state(State))) |&gt;\n  filter(!is.na(State), !State %in% c(\"district of columbia\",\"alaska\",\"hawaii\")) |&gt;\n  right_join(us_data,\n    by = c(\"State\" = \"region\")) |&gt;\n  ggplot(mapping = aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = How.often.patients..wounds.improved.or.healed.after.an.operation),linewidth=0.3,color=\"white\") +\n  labs(fill = \"Percentage of wounds getting healed \\nafter operation\", title=\"How Often Patients' Wounds Healed After An Operation In 48 States\", subtitle=\"Data: Home Health Care - State by State Data\",caption = \"Source: Data.gov\") +\n  coord_map() +\n  theme(plot.title = element_text(size = 30)) +\n  theme_void() +\n  scale_fill_viridis()\n\n\n\n\nData Link\nThe data set records the state averages of several home health agency quality measures for Home Health Agencies. The variable of interest is\nHow.often.patients..wounds.improved.or.healed.after.an.operation.\nIn the plot, the more yellowish shade each state has, the higher the average percentage of wounds healed after operation. Therefore, South Dakota is the state with the lowest percentage of healed wounds (&lt;87%) while Rhode Island is the highest (&gt;93%). The states in the Northeastern and South East regions tend to have higher percentage of healing than the other regions of the country. This plot can provide valuable insights into the healthcare quality of each state. However, we need to carefully consider various factors beyond the raw averages to accurately assess and compare healthcare quality between states since each state has different population demographics as well as patients’ access to healthcare services and how frequently individuals utilize these services can impact healing rates. Therefore, while state averages for wound healing after operations provide an important snapshot of healthcare outcomes of each state, they should be interpreted within the broader context of demographic, socioeconomic, policy, and healthcare system factors."
  },
  {
    "objectID": "map.html#us-states",
    "href": "map.html#us-states",
    "title": "Mini Project 1: Maps",
    "section": "",
    "text": "us_data &lt;- map_data(\"state\")\nhome_health_care &lt;- read.csv(\"dataset/health.csv\")\n\nhome_health_care |&gt;\n  drop_na(Quality.of.Patient.Care.Star.Rating) |&gt;\n  mutate(State = str_to_lower(abbr2state(State))) |&gt;\n  filter(!is.na(State), !State %in% c(\"district of columbia\",\"alaska\",\"hawaii\")) |&gt;\n  right_join(us_data,\n    by = c(\"State\" = \"region\")) |&gt;\n  ggplot(mapping = aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = How.often.patients..wounds.improved.or.healed.after.an.operation),linewidth=0.3,color=\"white\") +\n  labs(fill = \"Percentage of wounds getting healed \\nafter operation\", title=\"How Often Patients' Wounds Healed After An Operation In 48 States\", subtitle=\"Data: Home Health Care - State by State Data\",caption = \"Source: Data.gov\") +\n  coord_map() +\n  theme(plot.title = element_text(size = 30)) +\n  theme_void() +\n  scale_fill_viridis()\n\n\n\n\nData Link\nThe data set records the state averages of several home health agency quality measures for Home Health Agencies. The variable of interest is\nHow.often.patients..wounds.improved.or.healed.after.an.operation.\nIn the plot, the more yellowish shade each state has, the higher the average percentage of wounds healed after operation. Therefore, South Dakota is the state with the lowest percentage of healed wounds (&lt;87%) while Rhode Island is the highest (&gt;93%). The states in the Northeastern and South East regions tend to have higher percentage of healing than the other regions of the country. This plot can provide valuable insights into the healthcare quality of each state. However, we need to carefully consider various factors beyond the raw averages to accurately assess and compare healthcare quality between states since each state has different population demographics as well as patients’ access to healthcare services and how frequently individuals utilize these services can impact healing rates. Therefore, while state averages for wound healing after operations provide an important snapshot of healthcare outcomes of each state, they should be interpreted within the broader context of demographic, socioeconomic, policy, and healthcare system factors."
  },
  {
    "objectID": "map.html#wisconsin-districts",
    "href": "map.html#wisconsin-districts",
    "title": "Mini Project 1: Maps",
    "section": "Wisconsin Districts",
    "text": "Wisconsin Districts\n\nwi &lt;- ggplot(data = wi_merged, aes(fill = winner)) +\n  annotation_map_tile(zoom = 6, type = \"osm\", progress = \"none\") + \n  geom_sf(alpha = 0.5) +\n  scale_fill_manual(\"Winner\", values = c(\"blue\", \"red\")) + \n  geom_sf_label(aes(label = DISTRICT), fill = \"white\") +\n  theme_void()\nwi + \n  labs(fill = \"Winner Party\", title=\"Wisconsin Controversial Congressional Districts and Gerrymandering\\nin 2016\", caption = \"Source: fes16\")\n\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n\n\n\n\nwi +\n  aes(fill = r_prop) + \n  scale_fill_distiller(\n    \"Proportion\\nRepublican\", \n    palette = \"RdBu\", \n    limits = c(0, 0.7)\n  )+ \n  labs(title=\"Proportion of Republican Votes in Wisconsin Congressional Districts\", subtitle =\"In 2016\", caption = \"Source: fes16\") \n\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n\n\n\n\n\nFor the choropleth map, the district 4 has color blue.\n\npal &lt;- colorNumeric(palette = \"RdYlBu\", domain = c(0, 1))\n\nleaflet_wi &lt;- leaflet(wi_merged) |&gt;\n  addTiles() |&gt;\n  addPolygons(\n    weight = 1, \n    fillOpacity = 0.7, \n    fillColor = ~ifelse(r_prop &gt; d_prop, \"red\", \"blue\"), \n    color = \"white\",\n    popup = ~paste(\"District \", DISTRICT, \"&lt;/br&gt;\", \"Probability of Republic Votes: \", round(r_prop, 4),\"&lt;/br&gt;\", \"Probability of Democratic Votes: \", round(d_prop, 4), \"&lt;/br&gt;Total votes: \", wi_results$total_votes)\n  ) |&gt;                         \n  setView(lng = -90, lat = 45, zoom = 7)\nleaflet_wi\n\n\n\n\n\nClicking on a district will show the probability of Republican and Democratic votes of that district.\nIn 2016, most of the districts in Wisconsin’s winner was Republic (6/8), except for District 2,3, and 4. In District 3 and District 4, there are no votes for Republican party. The ratio of probability of votes between the winner and the opponent party of most district is about 2:1. According to the plot, I assume that the winner party is Republican Party since it won more districts."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Link"
  },
  {
    "objectID": "projects.html#mini-project-1-maps",
    "href": "projects.html#mini-project-1-maps",
    "title": "Projects",
    "section": "",
    "text": "Link"
  },
  {
    "objectID": "index.html#contact-me",
    "href": "index.html#contact-me",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Email: nguyen94@stolaf.edu"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Undergraduate Researcher | May 2023 - Present\nLead CS Teaching Assistant | Feb 2023 - Present\nTechnology Consulting Assistant | Sep 2022 - Present"
  },
  {
    "objectID": "index.html#link",
    "href": "index.html#link",
    "title": "Fay Nguyen",
    "section": "",
    "text": "Course Link\nPortfolio"
  },
  {
    "objectID": "simulation.html",
    "href": "simulation.html",
    "title": "Mini Project 2: Simulation - The Effects of Two Factors On The Power of A Statistical Test",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ggplot2)\nlibrary(tibble)\nlibrary(patchwork)\nlibrary(forcats)"
  },
  {
    "objectID": "simulation.html#factor-1-variance",
    "href": "simulation.html#factor-1-variance",
    "title": "Mini Project 2: Simulation - The Effects of Two Factors On The Power of A Statistical Test",
    "section": "Factor 1: Variance",
    "text": "Factor 1: Variance\nThe first factor we are going to examine is variance. We will evaluate \\(\\sigma=\\sqrt{Variance}\\).\nThis is a list of randomized standard deviation.\n\nsd_diff &lt;- sample(5:75,iter)\nprint(sd_diff)\n\n [1] 61 65 60 21 47 69 37 22 54 25\n\n\n\n#A list storing the results\ncombined_data &lt;- tibble(n_per_group = numeric(), power = numeric(), sd_diff_val = numeric())\nfor (val in sd_diff) {\n  result &lt;- power_stat_test(mean1, 0, val, type_1_error_level, numsims, iter)\n  temp_data &lt;- tibble(n_per_group = result[[1]], power = result[[2]], sd_diff_val = rep(val, length(result[[1]])))\n  combined_data &lt;- rbind(combined_data, temp_data)\n}\n\nggplot(combined_data, aes(x = n_per_group, y = power, color = as.factor(sd_diff_val))) +\n  geom_line() +\n  geom_hline(yintercept = 0.8, color = \"red\") +\n  labs(color = \"SD Difference\")+\n  theme_minimal() +\n  labs(x=\"Sample Size\", y = \"Power\", color=\"Standard deviation\",title=\"Power of statistical tests with different standard deviation\")\n\n\n\n\nThough the power of each case is approximately the same, according to the legend that is sorted based on the power and the sample size, the cases with smaller deviation seems to have larger power.\nExperimenters can control the standard deviation by sampling a homogeneous population of subjects, by reducing random measurement error and/or by making sure the experimental procedures are applied very consistent."
  },
  {
    "objectID": "simulation.html#factor-2-size-of-the-true-difference",
    "href": "simulation.html#factor-2-size-of-the-true-difference",
    "title": "Mini Project 2: Simulation - The Effects of Two Factors On The Power of A Statistical Test",
    "section": "Factor 2: Size of the true difference",
    "text": "Factor 2: Size of the true difference\nNext, we will evaluate the factor true difference, which is \\(|\\Delta_{mean1-mean2}|\\).\n\ntrue_diff &lt;- sample(0:100,iter)\nprint(true_diff)\n\n [1] 49 62 70 57 99 13 54 12 39 85\n\n\n\ncombined_data_mean &lt;- tibble(n_per_group = numeric(), power = numeric(), true_diff_val = numeric())\nfor (val in true_diff) {\n  result &lt;- power_stat_test(mean1, val, sd, type_1_error_level, numsims, iter)\n  temp_data &lt;- tibble(n_per_group = result[[1]], power = result[[2]], true_diff_val = rep(val, length(result[[1]])))\n  combined_data_mean &lt;- rbind(combined_data_mean, temp_data)\n}\n\n\nggplot(combined_data_mean, \n       aes(x = n_per_group, \n           y = power,\n       color=fct_reorder(as.factor(true_diff_val),power))) +\n  geom_line(linewidth=0.8)+\n  geom_hline(yintercept = 0.8, color = \"red\", linewidth=1) +\n  labs(x=\"Sample Size\", \n       y = \"Power\", \n       color=\"True Difference\",\n       title=\"Power of statiscal tests with different true difference\")+\n  theme_minimal()\n\n\n\n\nFrom the graph, we can see that the higher the true difference is, the higher the power is. As the sample size grows larger with significant true difference, the power approaches 1 faster."
  },
  {
    "objectID": "simulation.html#factor-3-type-1-error-level",
    "href": "simulation.html#factor-3-type-1-error-level",
    "title": "Mini Project 2: Simulation - The Effects of Two Factors On The Power of A Statistical Test",
    "section": "Factor 3: Type 1 Error Level",
    "text": "Factor 3: Type 1 Error Level\nThe third factor we will evaluate is Type I Error Level \\(\\alpha\\).\nThis is a list of randomized Type I Error Level.\n\ntype_1_error_level &lt;- sample(seq(0.01, 0.5, by = 0.01), iter, replace = TRUE)\n\n\ncombined_data_error &lt;- tibble(n_per_group = numeric(), power = numeric(), error_level = numeric())\ntype_1_error_level\n\n [1] 0.30 0.36 0.24 0.11 0.22 0.50 0.20 0.39 0.38 0.44\n\nfor (val in type_1_error_level) {\n  result &lt;- power_stat_test(mean1,10, sd, val, numsims, iter)\n  temp_data &lt;- tibble(n_per_group = result[[1]], power = result[[2]], error_level = rep(val, length(result[[1]])))\n  combined_data_error &lt;- rbind(combined_data_error, temp_data)\n}\n\n\nggplot(combined_data_error, aes(x = n_per_group, y = power, color = fct_reorder2(as.factor(error_level),n_per_group,power))) +\n  geom_line(linewidth=0.8) +\n  geom_hline(yintercept = 0.8, color = \"red\", linewidth=1) +\n  labs(color = \"Type I Error\")+\n  labs(x=\"Sample Size\", \n       y = \"Power\", \n       color=\"Type I Error\",\n       title=\"Power of statiscal tests with different true difference\")+\n  theme_minimal()\n\n\n\n\nThe relationship between the Type I Error Level and power: the more the the Type I Error Level is, the higher the power is. The stronger the evidence needed to reject the null hypothesis, the lower the chance that the hypothesis will be rejected."
  },
  {
    "objectID": "simulation.html#factor-4-sample-size",
    "href": "simulation.html#factor-4-sample-size",
    "title": "Mini Project 2: Simulation - The Effects of Two Factors On The Power of A Statistical Test",
    "section": "Factor 4: Sample size",
    "text": "Factor 4: Sample size\nFrom those graphs above, we can see an obvious pattern that the larger the sample size, the higher the power with other factors remain the same. Since sample size is typically under an experimenter’s control, increasing sample is one way to increase power."
  },
  {
    "objectID": "simulation.html#the-effects-of-two-factors-on-the-power-of-a-statistical-test",
    "href": "simulation.html#the-effects-of-two-factors-on-the-power-of-a-statistical-test",
    "title": "Mini Project 2: Simulation",
    "section": "The Effects of Two Factors On The Power of A Statistical Test",
    "text": "The Effects of Two Factors On The Power of A Statistical Test\nThere are some factors that affect the power of a statistical test:\n\nsample size\ntype I error level\nvariability in the data\nsize of the true difference\n\nwhy intercept at 0.8: To evaluate the effects for two factors, I created a generalized function to compute the power of each statistical test:\n\npower_stat_test &lt;- function(mean1, mean_diff, sd1, sd_diff, type_1_error_level, numsims,iter){\n  #list of power values after all iterations \n  power_vals &lt;- vector(\"double\",iter)\n  #list of sample size value\n  sample_size &lt;- vector(\"numeric\",iter)\n  #calculate the mean of the second group\n  mean2 &lt;- mean1 + mean_diff\n  #calculate the standard deviation of the second group\n  sd2 &lt;- sd1 + sd_diff\n  for (k in 1:iter)  {\n    significant &lt;- vector(\"logical\", numsims)\n    n1 &lt;- 5 * k\n    n2 &lt;- n1\n    for (i in 1:numsims) {\n      samp1 &lt;- rnorm(n1, mean1, sd1)\n      samp2 &lt;- rnorm(n2, mean2, sd2)\n      p_value &lt;- t.test(x = samp1, y = samp2)$p.value\n      significant[i] &lt;- (p_value &lt; type_1_error_level)\n    }\n    power_vals[k] &lt;- mean(significant)\n    sample_size[k] &lt;- n1\n  }\n  return(list(sample_size,power_vals))\n}\n\nThis function takes the parameters:\n\n\n\n\n\n\n\nParameter\nPurpose\n\n\n\n\nmean1\nThe mean value of the first group\n\n\nmean_diff\nThe true difference in mean value of two groups\n\n\nsd1\nThe standard deviation of the first group\n\n\nsd_diff\nThe difference in standard deviation of two groups\n\n\ntype_1_error_level\nType I error level or the risk of making a Type I error\n\n\nnumsims\nNumber of statistics tests on the same simulated data set (=1000)\n\n\niter\nThis value used for the purpose of testing the simulated data set with a factor changing over the time and other factors remain the same\n\n\n\nI set this value large to…\n\nmean1 &lt;- 225\niter &lt;- 10\ntype_1_error_level &lt;- 0.05\nnumsims &lt;- 1000\nsd1 &lt;- 35"
  },
  {
    "objectID": "simulation.html#overview",
    "href": "simulation.html#overview",
    "title": "Mini Project 2: Simulation - The Effects of Two Factors On The Power of A Statistical Test",
    "section": "Overview:",
    "text": "Overview:\nPower of a statistical test: the probability that it rejects the null hypothesis when the null hypothesis is false or the probability that a statistical test can detect when a true difference exists\nThere are some factors that affect the power of a statistical test:\n\nVariability in the data (variance)\nTrue difference\nType I Error Level\nSize of the sample\n\nWhile we evaluate the effect of these factors on the power, we will especially consider the intercept at 0.8. Power is usually set at 80%. This means that if there are true effects to be found in 100 different studies with 80% power, only 80 out of 100 statistical tests will actually detect them. The reason why we choose this value is that the minimum power of a study required is 80%.\nBelow is a generalized function to compute the power of each statistical test based on the four important factors (size of sample, type I error level or significance leve, standard deviation, and difference in mean:\n\npower_stat_test &lt;- function(mean1, mean_diff, sd, type_1_error_level, numsims,iter){\n  #list of power values after all iterations \n  power_vals &lt;- vector(\"double\",iter)\n  #list of sample size value\n  sample_size &lt;- vector(\"numeric\",iter)\n  #calculate the mean of the second group\n  mean2 &lt;- mean1 + mean_diff\n  #calculate the standard deviation of the second group\n  for (k in 1:iter)  {\n    significant &lt;- vector(\"logical\", numsims)\n    n1 &lt;- 5 * k\n    n2 &lt;- n1\n    for (i in 1:numsims) {\n      samp1 &lt;- rnorm(n1, mean1, sd)\n      samp2 &lt;- rnorm(n2, mean2, sd)\n      p_value &lt;- t.test(x = samp1, y = samp2)$p.value\n      significant[i] &lt;- (p_value &lt; type_1_error_level)\n    }\n    power_vals[k] &lt;- mean(significant)\n    sample_size[k] &lt;- n1\n  }\n  return(list(sample_size,power_vals))\n}\n\nThis function takes these parameters:\n\n\n\n\n\n\n\nParameter\nPurpose\n\n\n\n\nmean1\nThe mean value of the first group\n\n\nmean_diff\nThe true difference in mean value of two groups\n\n\nsd\nThe standard deviation of two groups\n\n\ntype_1_error_level\nType I error level or the risk of making a Type I error\n\n\nnumsims\nNumber of statistics tests on the same simulated data set (=1000)\n\n\niter\nThis value used for the purpose of testing the simulated data set with a factor changing over the time and other factors remain the same\n\n\n\nSome parameters can be constant between tests so I will initialize it here:\n\nmean1 &lt;- 225\niter &lt;- 10\ntype_1_error_level &lt;- 0.05\nnumsims &lt;- 1000\nsd &lt;- 35"
  },
  {
    "objectID": "string_regex.html",
    "href": "string_regex.html",
    "title": "Mini Project 3: Strings and Regular Expressions",
    "section": "",
    "text": "https://towardsdatascience.com/what-songs-tell-us-about-text-mining-with-lyrics-ca80f98b3829 # DATASET WRANGLING\n\nbts_lyrics &lt;- read.csv(\"dataset/lyrics-v12.csv\") %&gt;%\n  filter(lyrics != \"\", repackaged != TRUE, !str_detect(eng_track_title, \"Skit.*\")) %&gt;%\n  select(-kor_track_title, -id, -track_title, -has_full_ver, -repackaged) %&gt;%\n  mutate(\n    lyrics = str_replace_all(lyrics, \"\\n\", \" \"),  # Remove newlines\n    lyrics = str_replace_all(lyrics, \"[\\\\(\\\\{][^\\\\)\\\\}]*[\\\\)\\\\}]\", \"\"), \n    lyrics = str_replace_all(lyrics, \"[,\\\\*\\\\.!\\`\\'“”‘’]\", \"\"),\n    lyrics = str_replace_all(lyrics, \"\\\"\", \"\"),\n    lyrics_cleaned = str_extract_all(lyrics, \"\\\\b[A-Za-z]+\\\\b\") %&gt;%  \n      lapply(function(x) paste(x, collapse = \" \")) \n  )"
  },
  {
    "objectID": "string_regex.html#emotion",
    "href": "string_regex.html#emotion",
    "title": "Mini Project 3: Strings and Regular Expressions",
    "section": "Emotion",
    "text": "Emotion\n\nbts_lyrics_sentences &lt;- read.csv(\"dataset/lyrics-v12.csv\") %&gt;%\n  filter(lyrics != \"\", repackaged != TRUE, !str_detect(eng_track_title, \"Skit.*\")) %&gt;%\n  select(-kor_track_title, -id, -track_title, -has_full_ver, -repackaged) %&gt;%\n  mutate(\n    lyrics = str_replace_all(lyrics, \"[\\\\(\\\\{][^\\\\)\\\\}]*[\\\\)\\\\}]\", \"\"), \n    lyrics = str_replace_all(lyrics, \"[,\\\\*\\\\.!\\`“”‘’]\", \"\"),\n    lyrics = str_replace_all(lyrics, \"\\\"\", \"\") \n  ) \nbts_lyrics_sentences$lyrics[1]\n\n[1] \"were now going to progress to some steps\\nwhich are a bit more difficult\\nready set and begin\\nbig hit exclusive exclusive\\ndj friz\\nwhos that?\\nb a n g t a n\\nbulletproof boy scouts\\n\\n2 cool 2 cool 4 skool\\n2 cool 2 cool 4 skool\\nteenagers in their 10s and 20s\\nlet's talk about it easily\\nyou take that\\n2 cool 2 cool 4 skool\\n2 cool 2 cool 4 skool\\nteenagers in their 10s and 20s\\nlet's talk about it easily\\nyou take that\"\n\n\n\nstr_view(bts_lyrics_sentences$lyrics[2], '\\n')\n\n[1] │  give it to me&lt;\n    │ &gt;  be nervous&lt;\n    │ &gt;  the one to end it all&lt;\n    │ &gt;  we are bulletproof&lt;\n    │ &gt; we are bulletproof&lt;\n    │ &gt; bulletproof&lt;\n    │ &gt; &lt;\n    │ &gt; the name is jungkook my scale is nationwide&lt;\n    │ &gt; i pulled all-nighters at practice rooms&lt;\n    │ &gt; instead of school dancing and singing&lt;\n    │ &gt; while you guys partied&lt;\n    │ &gt; i gave up sleep for my dreams&lt;\n    │ &gt; i spent all night holding a pen&lt;\n    │ &gt; closing my eyes only after the morning sun rises&lt;\n    │ &gt; my limit was broken in the&lt;\n    │ &gt; double standards and many oppositions&lt;\n    │ &gt; but i got lucky and was contacted by an agency&lt;\n    │ &gt; yall you who are called rappers because you cant sing&lt;\n    │ &gt; the rapper title is an extravagance for you&lt;\n    │ &gt; &lt;\n    │ &gt; everywhere i go everything i do&lt;\n    │ &gt; i will show you as much as i sharpened my sword&lt;\n    │ &gt; to all the people who looked down on me&lt;\n    │ &gt;  hey shout it out&lt;\n    │ &gt; &lt;\n    │ &gt; oh throw a stone at me if youve done as much as i did&lt;\n    │ &gt; we go hard we have no fear&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt; oh throw a stone at me if youve done as much as i did&lt;\n    │ &gt; we go hard we have no fear&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt; &lt;\n    │ &gt;  give it to me&lt;\n    │ &gt;  be nervous&lt;\n    │ &gt;  the one to end it all&lt;\n    │ &gt;  we are bulletproof&lt;\n    │ &gt; we are bulletproof&lt;\n    │ &gt; bulletproof&lt;\n    │ &gt; &lt;\n    │ &gt; look at my profile theres nothing there yet&lt;\n    │ &gt; still a trainee and rapper man&lt;\n    │ &gt; yeah i do know thats nothing&lt;\n    │ &gt; i contemplated a lot but now i dont need anything&lt;\n    │ &gt; youre still an amateur&lt;\n    │ &gt; im in the majors hope youll rot like that&lt;\n    │ &gt; rap monster like my name&lt;\n    │ &gt; i can eat up any kind of beat like a monster&lt;\n    │ &gt; im loyal to my name guys come here take a preview&lt;\n    │ &gt; i put a twist to being an idol&lt;\n    │ &gt; haha hyungs who only had hip-hop pride&lt;\n    │ &gt; told me itd be impossible but&lt;\n    │ &gt; look carefully i place a period after impossible&lt;\n    │ &gt; im possible now are we all set boy?&lt;\n    │ &gt; &lt;\n    │ &gt; everywhere i go everything i do&lt;\n    │ &gt; i will show you as much as i sharpened my sword&lt;\n    │ &gt; to all the people who looked down on me&lt;\n    │ &gt;  hey shout it out&lt;\n    │ &gt; &lt;\n    │ &gt; oh throw a stone at me if youve done as much as i did&lt;\n    │ &gt; we go hard we have no fear&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt; oh throw a stone at me if youve done as much as i did&lt;\n    │ &gt; we go hard we have no fear&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt;  we just sing it like&lt;\n    │ &gt; &lt;\n    │ &gt;  give it to me&lt;\n    │ &gt;  be nervous&lt;\n    │ &gt;  the one to end it all&lt;\n    │ &gt;  we are bulletproof&lt;\n    │ &gt; we are bulletproof&lt;\n    │ &gt; bulletproof&lt;\n    │ &gt; bulletproof\n\nsentenceLyricsList &lt;- str_split(bts_lyrics_sentences$lyrics,\"\\n\")\nsentenceLyricsList &lt;- unlist(sentenceLyricsList) \nwordsLyricsList &lt;- wordsLyricsList[str_detect(wordsLyricsList,\"[A-Za-z']+$\")]\nwordFreq &lt;- as.data.frame(table(wordsLyricsList)) |&gt;\n  mutate(wordsLyricsList = as.character(wordsLyricsList)) |&gt;\n  anti_join(stopwordsList,by=c(wordsLyricsList=\"value\")) |&gt;\n  slice_max(Freq,n=300)"
  }
]